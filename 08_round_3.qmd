# Round 3

## Prepare question for round 3 {#sec-prepare-questions-round3}

-   [ ] Reformulate type 1 questions which did not reach consensual agreement by using the comments or split them into different questions

-   [ ] Create new type 1 questions from the responses to type 2 and 3 questions

::: {.callout-note appearance="minimal"}
There should be only type 1 questions in this round. The code is therefore simpler and run faster than in round 2.
:::

## Update data {#sec-update-data-round3}

Once the round 3 is finished in REDCap, you can open `0_run_ME_dft3.R`. It will show you the order of files to update and run.

-   [ ] Run `./code/dft3/01a_dft3_update_data_with_REDCapR.R`

This code will connect to the corresponding [**`REDCap`**](https://projectredcap.org/) project using the token, downloads the raw data and metadata from the project, and save them as \*.RData files. It also creates one xlsx table with the raw data, which can be used for quick checks.

### Detail of outputs

| Folder                    | Output file                   | Description                                          |
|-------------------|---------------------|--------------------------------|
| `./data/redcap_data_raw/` | `dft3_metadata.RData`         | Raw metadata                                         |
| `./data/redcap_data_raw/` | `dft3_data_redcapr_raw.RData` | Raw data                                             |
| `./output/check/`         | `chk_dft3_type1_raw.xlsx`     | Quick check table with raw data for type 1 questions |

## Recode data {#sec-recode-data-round3}

-   [ ] Update as required and run `./code/dft3/01b_dft3_recode_data.R`

This code will process the raw data and the metadata downloaded in @sec-update-data-round3, in order to create the "clean" data and metadata tables. In particular, it will:

-   correct labeling errors, typos, etc.

-   simplify labeling

-   define the lists of variables by type (1)

-   do a conditional deduplication (in case one or several participants have filled in several REDCap records per person -\> keep the *latest answer choice* and *all comments*)

-   save clean data and metadata in RData format

::: column-margin
![dft3_z\_s4_type1.png (for the statement 4 in preamble of round 3)](_img/dft3_z_s4_type1.png){#fig-dft3-type1 fig-align="center"}
:::

-   create visuals (\*.png) for all type 1 questions, showing the distribution of answers on a 1 to 9 scale and a boxplot - see @fig-dft3-type1

### Detail of outputs

| Folder          | Output file               | Description                      |
|------------------|--------------------------|----------------------------|
| `./data/dft3/`  | `dft3_data_clean.RData`   | Clean data                       |
| `./data/dft3/`  | `dft3_lookup_final.RData` | Clean lookup table (metadata)    |
| `./output/png/` | `dft3_*_s*_type1.png`     | Visuals for all type 1 questions |

## Prepare tables without participant id {#sec-prepare-tables-without-participant-id-round3}

-   [ ] Run `./code/dft3/02a_dft3_prepare_tables_without_participant_id.R`

This code will analyse the "clean" data (generated in @sec-recode-data-round3) to create the group result tables (= statistical and graphical summaries).

It automatically calls code `./code/dft3/01c_dft3_define_cols.R.`

It also creates and saves in xlsx format tables containing only the "no opinion" responses, allowing a quick check if necessary.

### Detail of outputs

| Folder            | Output file                      | Description                                 |
|------------------|----------------------|--------------------------------|
| `./output/RData/` | `dft3_type1_zz_combined.RData`   | Table with results of all type 1 questions  |
| `./output/RData/` | `dft3_dt_comments_m.RData`       | Table with all comments                     |
| `./output/check/` | `dft3_type1_zz0_no_opinion.xlsx` | Quick check table of 'no opinion' responses |

## Update introductory texts {#sec-update-introductory-texts-round3}

-   [ ] Update the content of your introductory texts (\*.docx) if needed, as indicated in the @sec-update-texts-introduction.

-   [ ] Run `./code/00_update_texts_intro.R`

This code updates the local directory of texts used in the introduction of the report sections (from the available and up-to-date directory on the server).

## Publish the generic report {#sec-create-generic-report-round3}

In round 3, you should have only type 1 questions so you do not need to recode manually.

-   [ ] Publish the generic report by running the lines below in `0_run_ME_dft3.R`

    ``` r
    ### . publish Rmd ----
    ### .. dft3_report_generic.Rmd ----
    input <-  "analysis/dft3/dft3_report_generic.Rmd"

    output_file <- here::here('output', 'reports', 'dft3',
                              stringr::str_glue("dft3_report_generic_{Sys.Date()}.docx"))

    rmarkdown::render(
      input = input,
      output_file = output_file)
    ```

This code will create the word document ("generic report") inserting the introductory texts (updated in @sec-update-introductory-texts-round3) and the results tables (created in @sec-prepare-tables-without-participant-id-round3), based on a reference word template.

It automatically calls `./code/dft3/01c_dft3_define_cols.R.` and for each section `./analysis/dft3/dft3_child_section.Rmd`, which will create tables for each type of questions that are in the section (conditional for loop), by running one code:

-   `./code/03a_create_flextable_results_type_1_generic.R` : creates the result table for type 1 statements in the section and for their comments

### Detail of outputs

| Folder                  | Output file                                | Description              |
|-------------------|---------------------------------|--------------------|
| `./output/reports/dft3` | `dft3_report_generic_date_YYYY-MM-DD.docx` | Generic report with date |

## Publish all individualized reports {#sec-publish-individualized-reports}

-   [ ] Publish individual reports by running the lines below in `0_run_ME_dft3.R`

    ``` r

    ### .. 05_dft3_to_render_individual_reports.R ------------------------------
    ### TAKES time ... have a coffee, a walk, a nice chat with someone ...
    source(here::here('code', 'dft3', '05_dft3_to_render_individual_reports.R'),
           encoding = 'UTF-8')
    ```

This code will create the word document for each participant ("individualized report"), based on a word template, by inserting the email of the participant, the introductory texts (updated in @sec-update-introductory-texts-round3), as well as the group result tables with individual answers for each statement.

The code `./analysis/dft3/dft3_report_per_participant.Rmd` (automatically called within `./code/dft3/05_dft3_to_render_individual_reports.R`) functions as an iterative loop and creates the individualized report for each participant by calling automatically:

-   `./code/dft3/01c_dft3_define_cols.R` and

-   `./code/dft3/02b_dft3_prepare_tables_participants.R` : adds results of the participant to the generic table

It will then call for each section `./analysis/dft3/dft3_child_section.Rmd`, which will create tables for each type of questions that are in the section (conditional for loop), by running one code:

-   `./code/04a_create_flextable_results_type_1_participants.R` : creates the result table for type 1 statements with individual answers in the section and for their comments

### Detail of outputs

| Folder                                        | Output file                                 | Description                                            |
|----------------------------|--------------------------|------------------|
| `/output/reports/dft3/report_by_participant/` | `dft3_report_participant_X_YYYY-MM-DD.docx` | Individualized reports (one per participant) with date |
